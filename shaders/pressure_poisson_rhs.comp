#version 450

#include"prelude.comp"

float vx(int x, int y) {
    uint rx = (x + WIDTH) % WIDTH;
    uint ry = (y + HEIGHT) % HEIGHT;
    return vx_arr[rx + WIDTH * ry];
}

float vy(int x, int y) {
    uint rx = (x + WIDTH) % WIDTH;
    uint ry = (y + HEIGHT) % HEIGHT;
    return vy_arr[rx + WIDTH * ry];
}

DECLARE(p1, NABLA_VECTORFIELD(vx, vy, x, y) / dt)

DECLARE(p2_nx, XNABLA_TRIPLET(vx, vy, x, y))
DECLARE(p2_ny, YNABLA_TRIPLET(vx, vy, x, y))
DECLARE(p2, NABLA_VECTORFIELD(p2_nx, p2_ny, x, y))

DECLARE(p3_n1, NABLA_VECTORFIELD(vx, vy, x, y))
DECLARE(p3_n2x, XNABLA_SCALARFIELD(p3_n1, x, y))
DECLARE(p3_n2y, YNABLA_SCALARFIELD(p3_n1, x, y))
DECLARE(p3, nu * NABLA_VECTORFIELD(p3_n2x, p3_n2y, x, y))

DECLARE(result, rho * (p1(x, y) - p2(x, y) + p3(x, y)))

void main() {
    uint i = gl_GlobalInvocationID.x;

    int x = int(i % WIDTH);
    int y = int(i / WIDTH);

    pressure_possion_rhs[i] = result(x, y);
}
